extend layout
block content
  .page-header
    h1 Sitzverteilung des Bundestags

  .main-results 
    table.table.table-striped
      thead
        tr
          th Partei
          th Sitze
      tbody
        each value, index in resTable
          tr
            th= value.party
            th= value.seats
            
  .chart
      
  script.
    var dataset = !{JSON.stringify(partyData)};
    dataset.forEach(function(d) {
      d.enabled = true;
    });
    var width = 360;
    var donutWidth = 75;
    var height = 360;
    var radius = Math.min(width, height) / 2;
    var color = d3.scale.category20b();
    var svg = d3.select('.chart')
      .append('svg')
      .attr('width', width)
      .attr('height', height)
      .append('g')
      .attr('transform', 'translate(' + (width / 2) +  ',' + (height / 2) + ')');
    var arc = d3.svg.arc()
      .innerRadius(radius - donutWidth)
      .outerRadius(radius);
    var pie = d3.layout.pie()
      .value(function(d) { return d.seats; })
      .sort(null);
    
    // tooltip
    var tooltip = d3.select('.chart')
      .append('div')
      .attr('class', 'custtooltip');
    tooltip.append('div')
      .attr('class', 'party');
    tooltip.append('div')
      .attr('class', 'seats');
    tooltip.append('div')
      .attr('class', 'percent');
    
    var path = svg.selectAll('path')
      .data(pie(dataset))
      .enter()
      .append('path')
      .attr('d', arc)
      .attr('fill', function(d, i) {
        return color(d.data.party);
      })
      .each(function(d) { this._current = d; });
    // tooltip handling
    path.on('mouseover', function(d) {
      var total = d3.sum(dataset.map(function(d) {
        return (d.enabled) ? d.seats : 0;
      }));
      var percent = Math.round(1000 * d.data.seats / total) / 10;
      tooltip.select('.party').html(d.data.party);
      tooltip.select('.seats').html(d.data.seats);
      tooltip.select('.percent').html(percent + '%');
      tooltip.style('display', 'block');
    });
    path.on('mouseout', function(d) {
      tooltip.style('display', 'none');
    });
    /*path.on('mousemove', function(d) {
      tooltip.style('top', d3.mouse(d.parentElement)[0] + 'px')
        .style('left', d3.mouse(d.parentElement)[1] + 'px');
    });*/
    
    var legendRectSize = 18;
    var legendSpacing = 4;
    var legend = svg.selectAll('.legend')
      .data(color.domain())
      .enter()
      .append('g')
      .attr('class', 'legend')
      .attr('transform', function(d, i) {
        var height = legendRectSize + legendSpacing;
        var offset =  height * color.domain().length / 2;
        var horz = -2 * legendRectSize;
        var vert = i * height - offset;
        return 'translate(' + horz + ',' + vert + ')';
      });
    legend.append('rect')
      .attr('width', legendRectSize)
      .attr('height', legendRectSize)
      .style('fill', color)
      .style('stroke', color)
      .on('click', function(label) {
        var rect = d3.select(this);
        var enabled = true;
        var totalEnabled = d3.sum(dataset.map(function(d) {
          return (d.enabled) ? 1 : 0;
        }));
        if (rect.attr('class') === 'disabled') {
          rect.attr('class', '');
        } else {
          if (totalEnabled < 2) return;
          rect.attr('class', 'disabled');
          enabled = false;
        }
    
        pie.value(function(d) {
          if (d.party === label) d.enabled = enabled;
          return (d.enabled) ? d.seats : 0;
        });
    
        path = path.data(pie(dataset));
    
        path.transition()
          .duration(750)
          .attrTween('d', function(d) {
            var interpolate = d3.interpolate(this._current, d);
            this._current = interpolate(0);
            return function(t) {
              return arc(interpolate(t));
            };
          });
      });
    legend.append('text')
      .attr('x', legendRectSize + legendSpacing)
      .attr('y', legendRectSize - legendSpacing)
      .text(function(d) { return d; });

  style.
    .legend {
      font-size: 12px;
    }
    rect {
      cursor: pointer;
      stroke-width: 2;
    }
    rect.disabled {
      fill: transparent !important;
    }  
    .chart {
      height: 360px;
      position: relative;
      margin: 0 auto; 
      width: 360px;
    }
    .custtooltip {
      background: #eee;
      box-shadow: 0 0 5px #999999;
      color: #333;
      display: none;
      font-size: 12px;
      left: 130px;
      padding: 10px;
      position: absolute;
      text-align: center;
      top: 95px;
      width: 80px;
      z-index: 10;
    }
    
    
